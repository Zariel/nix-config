name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  nix-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main
      with:
        extra-conf: |
          system-features = nixos-test benchmark big-parallel kvm
          extra-platforms = aarch64-darwin
    
    - name: Setup Nix Magic Cache
      uses: DeterminateSystems/magic-nix-cache-action@main
    
    - name: Check flake
      run: nix flake check
    
    - name: Check Nix formatting
      run: |
        if ! nix develop --command bash -c "find . -name '*.nix' -exec nixfmt --check {} \;"; then
          echo "❌ Nix files are not properly formatted"
          echo "To fix formatting, run: find . -name '*.nix' -exec nixfmt {} \;"
          exit 1
        fi
    
    - name: Build Darwin system configuration
      env:
        NIXPKGS_ALLOW_UNFREE: 1
      run: |
        echo "Building Darwin system configuration..."
        if ! nix build .#darwinConfigurations.macbook.system --impure; then
          echo "❌ Darwin system configuration failed to build"
          echo "To test locally, run: nix build .#darwinConfigurations.macbook.system --impure"
          exit 1
        fi
        echo "✅ Darwin system configuration builds successfully"
    
    - name: Build Home Manager configuration
      env:
        NIXPKGS_ALLOW_UNFREE: 1
      run: |
        echo "Building Home Manager configuration..."
        if ! nix build .#homeConfigurations.\"chrisbannister@macbook\".activationPackage --impure; then
          echo "❌ Home Manager configuration failed to build"
          echo "To test locally, run: nix build .#homeConfigurations.\"chrisbannister@macbook\".activationPackage --impure"
          exit 1
        fi
        echo "✅ Home Manager configuration builds successfully"